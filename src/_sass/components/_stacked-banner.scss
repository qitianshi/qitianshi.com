// A stacked banner is a block-level element wherein all immediate children
// are overlaid in the z-direction. It contains primary content and optionally
// a background.

// Copyright 2023 Qi Tianshi. All rights reserved.


@use "sass:map";

@use "abstracts/mixins" as mix;
@use "abstracts/variables" as var;
@use "base/typography";
@use "themes/themes";

.c-stacked-banner {

    @include mix.z-stack();

    // Increases the height of the banner to accommodate content if needed.
    min-height: fit-content;

    // The contents of the banner.
    &__content {

        @include mix.trim-vertical-margins();

        // Required for z-stacking to work, otherwise the filter on the
        // background creates a new stacking context that breaks the grid
        // stack.
        position: relative;

        width: fit-content;

        &--leading { margin: auto auto auto 0; }
        &--bottom-leading { margin: auto auto 0 0; }
        &--center { margin: auto; }

    }

    // The background image that fills the banner.
    &__background {

        width: 100%;
        height: 100%;
        object-fit: cover;

        // Allows size adjustment to work, otherwise `min-height: fit-content;`
        // of .c-stacked-banner will cause the full height of the image to
        // always be shown.
        overflow: hidden;

        // A gray background that's only visible when the image loading, to
        // keep the overlaid text legible.
        background: gray;

    }

    // The main heading text in .c-stacked-banner.
    &__heading {

        @extend %h1-style;

        margin: 1.5rem 0;

        // Increases the font size for larger screens.
        @media (min-width: map.get(var.$breakpoints, "small")) {
            font-size: 3.4rem;
        }

    }

    // If &__content follows &__background, content is set to dark theme.
    &__background ~ &__content {
        @extend %t-dark;
    }

    // Specific implementation of .c-stacked-banner for hero banners as page
    // headers.
    &--hero &__content {
        padding: var.$global-header-clear-space 10%;
    }

    // Specific implementation of .c-stacked-banner for headers for
    // .c-body-text.
    &--text-header &__content {

        // Makes the heading the same width as the body text.
        width: calc(100vw - 2 * var.$body-text-horizontal-padding);
        max-width: var.$body-text-max-width;

        padding: var.$global-header-clear-space 0;

        @include mix.mobile-horizontal-spacing("margin");

        // Overrides the width properties in mix.mobile-horizontal-spacing.
        @include mix.respond-to-breakpoint("small") {
            width: calc(100vw - 2 * var.$mobile-padding);
        }

        .c-stacked-banner__heading {
            overflow-wrap: break-word;
            hyphens: auto;
        }

    }

}
